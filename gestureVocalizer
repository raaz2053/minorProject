const int flexPin0 = A0; //pin A0 to read analog input
const int flexPin1 = A1; //pin A0 to read analog input
const int flexPin2 = A2; //pin A0 to read analog input

//Variables:
int value0,value1,value2,value3,value4,value5;
 //int  val,val1,val2;   

//const int groundpin = 18;             // analog input pin 4 -- ground
//const int powerpin = 19;              // analog input pin 5 -- voltage
const int xpin = A3;                  // x-axis of the accelerometer
const int ypin = A4;                  // y-axis
const int zpin = A5;

void setup(){
  
  Serial.begin(9600);       //Begin serial communication
//  pinMode(groundpin, OUTPUT);
 // pinMode(powerpin, OUTPUT);
 // digitalWrite(groundpin, LOW);
  //digitalWrite(powerpin, HIGH);


}

void loop(){
  
  value0 = analogRead(flexPin0);         //Read and save analog value from potentiometer
  value1 = analogRead(flexPin1);         //Read and save analog value from potentiometer
  value2 = analogRead(flexPin2);         //Read and save analog value from potentiometer
  value3 = analogRead(xpin);
  value4 = analogRead(ypin);
  value5 = analogRead(zpin);
                 //Print value
  /*val = map(value, 700, 900, 0, 9);//Map value 0-1023 to 0-255 (PWM)
  val1 = map(value1, 700, 900, 0, 9);//Map value 0-1023 to 0-255 (PWM)
  val2 = map(value2, 700, 900, 0, 9);//Map value 0-1023 to 0-255 (PWM)
  */
 // Serial.println("flex 1");
  Serial.print(analogRead(xpin));
  // print a tab between values:
  Serial.print("\t");
  Serial.print(analogRead(ypin));
  // print a tab between values:
  Serial.print("\t");
  Serial.print(analogRead(zpin));
  Serial.print("\t");
  Serial.print(value0);
  // print a tab between values:
  Serial.print("\t");
  Serial.print(value1);
  // print a tab between values:
  Serial.print("\t");
  Serial.print(value2);
    Serial.println();
  
 delay(200);
  /*Serial.println("flex 2");//Send PWM value to led
 
  Serial.println(value1);
  delay(1000);
  Serial.println("flex 3");
  
  Serial.println(value2);
  delay(1000);                          //Small delay
*/
}

